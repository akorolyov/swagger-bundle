<?php
/**
* Generate by SwaggerBundle : DO NOT EDIT THIS FILE !!!!!!!!
*/

namespace {{ namespace }};

{% for class in use %}
use {{ class }};
{% endfor %}


class {{ className }} implements EntityInterface
{



{% for property, conf in propertiesConf %}
    /**
    * description : {{ conf['description'] }}
    *
    * @var {{ conf['varType'] }}
    */
    protected ${{ property }};

{% endfor %}


    /**
    * constructor
    */
    public function __construct()
    {
{% for property, conf in propertiesConf %}
{%  if conf['class'] !=null %}
        $this->{{ property }} = new {{ conf['class'] }}();
{% endif %}
{% endfor %}
    }

{% for property, conf in propertiesConf %}
    /**
    * {{ property }} getter
    */
    public function get{{ property |capitalize }}()
    {
        return $this->{{ property }};
    }
{% endfor %}


{% for property, conf in propertiesConf %}
    /**
    * {{ property }} setter
    *
    * @param ${{ property }}
    * @return \{{ className }}
    */
    public function set{{ property |capitalize }}(${{ property }})
    {
        $this->{{ property }} = ${{ property }};

        return $this;
    }
{% endfor %}


    /**
    * to Array() method
    *
    * @return array
    */
    public function toArray()
    {
        return {% if hasParent %}array_merge (parent::toArray(), {% endif %}array(
{% for property, conf in propertiesConf %}
    {% if conf['toArray'] %}
        {% set suffix = '->toArray()' %}
    {% else %}
        {% set suffix = '' %}
    {% endif %}
    "{{ mapping[property] }}" => $this->get{{ property| capitalize }}(){{ suffix }},
{% endfor %}
        ){% if hasParent %}){% endif %};
    }

}